<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dmm.mapper.TTempTestMapper">
  <resultMap id="BaseResultMap" type="com.dmm.entry.TTempTest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="name1" jdbcType="VARCHAR" property="name1" />
    <result column="name2" jdbcType="VARCHAR" property="name2" />
    <result column="name3" jdbcType="VARCHAR" property="name3" />
    <result column="name4" jdbcType="VARCHAR" property="name4" />
    <result column="name5" jdbcType="VARCHAR" property="name5" />
    <result column="name6" jdbcType="VARCHAR" property="name6" />
    <result column="name7" jdbcType="VARCHAR" property="name7" />
    <result column="name8" jdbcType="VARCHAR" property="name8" />
    <result column="name9" jdbcType="VARCHAR" property="name9" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, name1, name2, name3, name4, name5, name6, name7, name8, name9
  </sql>
  <select id="selectByExample" parameterType="com.dmm.entry.TTempTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_temp_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_temp_test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_temp_test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dmm.entry.TTempTestExample">
    delete from t_temp_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dmm.entry.TTempTest">
    insert into t_temp_test (id, name, name1, 
      name2, name3, name4, 
      name5, name6, name7, 
      name8, name9)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{name1,jdbcType=VARCHAR}, 
      #{name2,jdbcType=VARCHAR}, #{name3,jdbcType=VARCHAR}, #{name4,jdbcType=VARCHAR}, 
      #{name5,jdbcType=VARCHAR}, #{name6,jdbcType=VARCHAR}, #{name7,jdbcType=VARCHAR}, 
      #{name8,jdbcType=VARCHAR}, #{name9,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dmm.entry.TTempTest">
    insert into t_temp_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="name1 != null">
        name1,
      </if>
      <if test="name2 != null">
        name2,
      </if>
      <if test="name3 != null">
        name3,
      </if>
      <if test="name4 != null">
        name4,
      </if>
      <if test="name5 != null">
        name5,
      </if>
      <if test="name6 != null">
        name6,
      </if>
      <if test="name7 != null">
        name7,
      </if>
      <if test="name8 != null">
        name8,
      </if>
      <if test="name9 != null">
        name9,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="name1 != null">
        #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null">
        #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null">
        #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null">
        #{name5,jdbcType=VARCHAR},
      </if>
      <if test="name6 != null">
        #{name6,jdbcType=VARCHAR},
      </if>
      <if test="name7 != null">
        #{name7,jdbcType=VARCHAR},
      </if>
      <if test="name8 != null">
        #{name8,jdbcType=VARCHAR},
      </if>
      <if test="name9 != null">
        #{name9,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dmm.entry.TTempTestExample" resultType="java.lang.Long">
    select count(*) from t_temp_test
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_temp_test
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.name1 != null">
        name1 = #{record.name1,jdbcType=VARCHAR},
      </if>
      <if test="record.name2 != null">
        name2 = #{record.name2,jdbcType=VARCHAR},
      </if>
      <if test="record.name3 != null">
        name3 = #{record.name3,jdbcType=VARCHAR},
      </if>
      <if test="record.name4 != null">
        name4 = #{record.name4,jdbcType=VARCHAR},
      </if>
      <if test="record.name5 != null">
        name5 = #{record.name5,jdbcType=VARCHAR},
      </if>
      <if test="record.name6 != null">
        name6 = #{record.name6,jdbcType=VARCHAR},
      </if>
      <if test="record.name7 != null">
        name7 = #{record.name7,jdbcType=VARCHAR},
      </if>
      <if test="record.name8 != null">
        name8 = #{record.name8,jdbcType=VARCHAR},
      </if>
      <if test="record.name9 != null">
        name9 = #{record.name9,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_temp_test
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      name1 = #{record.name1,jdbcType=VARCHAR},
      name2 = #{record.name2,jdbcType=VARCHAR},
      name3 = #{record.name3,jdbcType=VARCHAR},
      name4 = #{record.name4,jdbcType=VARCHAR},
      name5 = #{record.name5,jdbcType=VARCHAR},
      name6 = #{record.name6,jdbcType=VARCHAR},
      name7 = #{record.name7,jdbcType=VARCHAR},
      name8 = #{record.name8,jdbcType=VARCHAR},
      name9 = #{record.name9,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dmm.entry.TTempTest">
    update t_temp_test
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="name1 != null">
        name1 = #{name1,jdbcType=VARCHAR},
      </if>
      <if test="name2 != null">
        name2 = #{name2,jdbcType=VARCHAR},
      </if>
      <if test="name3 != null">
        name3 = #{name3,jdbcType=VARCHAR},
      </if>
      <if test="name4 != null">
        name4 = #{name4,jdbcType=VARCHAR},
      </if>
      <if test="name5 != null">
        name5 = #{name5,jdbcType=VARCHAR},
      </if>
      <if test="name6 != null">
        name6 = #{name6,jdbcType=VARCHAR},
      </if>
      <if test="name7 != null">
        name7 = #{name7,jdbcType=VARCHAR},
      </if>
      <if test="name8 != null">
        name8 = #{name8,jdbcType=VARCHAR},
      </if>
      <if test="name9 != null">
        name9 = #{name9,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dmm.entry.TTempTest">
    update t_temp_test
    set name = #{name,jdbcType=VARCHAR},
      name1 = #{name1,jdbcType=VARCHAR},
      name2 = #{name2,jdbcType=VARCHAR},
      name3 = #{name3,jdbcType=VARCHAR},
      name4 = #{name4,jdbcType=VARCHAR},
      name5 = #{name5,jdbcType=VARCHAR},
      name6 = #{name6,jdbcType=VARCHAR},
      name7 = #{name7,jdbcType=VARCHAR},
      name8 = #{name8,jdbcType=VARCHAR},
      name9 = #{name9,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>